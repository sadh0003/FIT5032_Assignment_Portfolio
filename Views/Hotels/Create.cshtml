@model FIT5032_Assignment_Portfolio.Models.Hotel

@{
    ViewBag.Title = "Create";
}

@{ WebImage photo = null;
    var newFileName = "";
    var imagePath = "";

    if (IsPost)
    {
        photo = WebImage.GetImageFromRequest();
        if (photo != null)
        {
            newFileName = Path.GetFileName(photo.FileName);
            imagePath = @"images\" + newFileName;

            photo.Save(@"~\" + imagePath);
        }
    }
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-md-6">
        <h4>Hotel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.HotelName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HotelName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HotelName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HotelStar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.HotelStar, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HotelStar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Neighbourhood, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Neighbourhood, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Neighbourhood, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("UserId", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @*@Html.DropDownList("User")*@
                @Html.DropDownList("UserId", (SelectList)ViewBag.UserName, " ")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
}
<div class="col-md-6">
    <div id="map"></div>
</div>

<script>
    // Initialize and add the map
    function initMap() {
        // The location of Monash
        var accom = { lat: -37.8770384, lng: 145.0427296 };
        // The map, centered at Monash
        var map = new google.maps.Map(document.getElementById('map'), { zoom: 18, center: { lat: -37.8770384, lng: 145.0427296 } });

        // The marker, positioned at the Hotels
        var marker = new google.maps.Marker({ position: accom, title: 'Select Location', map: map, draggable: true });

        marker.addListener('dragend', function (evt) {
            document.getElementById('Latitude').value = evt.latLng.lat().toFixed(7);
            document.getElementById('Longitude').value = evt.latLng.lng().toFixed(7);
        });
    }
</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyChuO1H-nJLVKc5-F2tSoxmlnqrTpo08hI&callback=initMap">
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
